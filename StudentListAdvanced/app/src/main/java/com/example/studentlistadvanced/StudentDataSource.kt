package com.example.studentlistadvanced

import android.os.Build
import android.util.Log
import androidx.annotation.RequiresApi
import androidx.room.Room
import com.example.studentlistadvanced.model.Student
import java.util.*
import kotlin.collections.ArrayList
import kotlin.collections.LinkedHashSet

class StudentDataSource {
    private var mainList: LinkedHashSet<Student> = linkedSetOf<Student>()
    private var deletedList: LinkedHashSet<Student> = linkedSetOf()
    private var deletedStack = Stack<Student>()
    private var id = 0
    private var studentsDeleted = 0
    val BASE_64_CODE =
        ""

    companion object {
        @Volatile
        private var INSTANCE: StudentDataSource? = null

        fun getDataSource(): StudentDataSource {
            val tempInstance = INSTANCE
            if (tempInstance != null) {
                return tempInstance
            }

            synchronized(lock = this) {
                val instance =
                    StudentDataSource()
                INSTANCE = instance
                return instance
            }
        }
    }

    fun addStudent(student: Student) {
        mainList.add(student)
        incrementId()
    }

    fun getId(): Int {
        return id
    }

    fun incrementId() {
        id += 1
    }

    fun isStudentExist(student: Student): Boolean {
        return mainList.contains(student)
    }

    fun getAllStudents(): ArrayList<Student> {
        if (mainList.isEmpty())
            return arrayListOf<Student>()
        var a = arrayListOf<Student>()
        a = ArrayList(mainList.toList())
        return a
    }

    fun deleteStudent(student: Student) {
        mainList.remove(student)

        if (studentsDeleted < 5) {
            deletedList.add(student)
            studentsDeleted++
        } else {
            if (studentsDeleted >= 5) {
                deletedList.remove(deletedList.first())
                deletedList.add(student)
            }
        }
        Log.d("LLL", "deleteStudent: $studentsDeleted  last = ${deletedList.last().name} first = ${deletedList.first().name}  }")
    }

    fun restore(): ArrayList<Student> {
        studentsDeleted = 0
        if (deletedList.isEmpty())
            return arrayListOf()
        var a = ArrayList(deletedList.toList()).reversed()
        mainList.addAll(deletedList)
        deletedList.clear()

        return a as ArrayList<Student>
    }

    @RequiresApi(Build.VERSION_CODES.O)
    fun decodeBase64(encodedString: String): String {
        val decodedBytes = Base64.getDecoder().decode(encodedString)
        val decodedString = String(decodedBytes)

        return decodedString
    }

}